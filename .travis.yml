dist: trusty

language: go

go:
  - "1.11.x"

services:
  - docker

env:
  global:
    - LINUX_ARM32V7_FILE_NAME="test_linux_arm32v7"
    - LINUX_ARM32V7_IMAGE_NAME="arm32v7"
    - LINUX_AMD64_FILE_NAME="test_linux_amd64"
    - LINUX_AMD64_IMAGE_NAME="amd64"

before_install:
  - go version

install:
  - go get -t -v ./...

before_script:
  - go test

script:
  - CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 go build -v -o $LINUX_ARM32V7_FILE_NAME
  - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -o $LINUX_AMD64_FILE_NAME
  - echo $DOCKER_HUB_PASSWORD | docker login -u=$DOCKER_HUB_USERNAME $DOCKER_HUB_PATH --password-stdin
  - docker build -t $DOCKER_HUB_PATH/$DOCKER_HUB_NAMESPACE/${DOCKER_HUB_REPOSITORY}_${LINUX_ARM32V7_IMAGE_NAME}:$TRAVIS_TAG -f docker/Dockerfile.${LINUX_ARM32V7_IMAGE_NAME} .

before_deploy:
  - env

deploy:
  - provider: releases
    api_key: "$GITHUB_API_KEY"
    file:
      - $LINUX_ARM32V7_FILE_NAME
      - $LINUX_AMD64_FILE_NAME
    skip_cleanup: true
    on:
      tags: true
  - deploy:
    provider: script
    script: bash docker/deploy.sh
    skip_cleanup: true
    on:
      tags: true
